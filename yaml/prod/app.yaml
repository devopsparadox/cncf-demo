apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: cncf-demo
spec:
  replicas: 5
  strategy:
    canary:
      canaryService: cncf-demo-canary
      stableService: cncf-demo-primary
      trafficRouting:
        istio:
          virtualServices:
          - name: cncf-demo-1
            routes:
            - primary
          - name: cncf-demo-2
            routes:
            - secondary
      analysis:
        templates:
        - templateName: success-rate
          clusterScope: true
        startingStep: 2
        args:
        - name: service-name
          value: cncf-demo-canary.production.svc.cluster.local
      steps:
      - setWeight: 20
      - pause:
          duration: 60
      - setWeight: 40
      - pause:
          duration: 60
      - setWeight: 60
      - pause:
          duration: 60
      - setWeight: 80
      - pause:
          duration: 60
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cncf-demo
  workloadRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cncf-demo
---
apiVersion: v1
kind: Service
metadata:
  name: cncf-demo-canary
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: cncf-demo
---
apiVersion: v1
kind: Service
metadata:
  name: cncf-demo-primary
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: cncf-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cncf-demo
  labels:
    app.kubernetes.io/name: cncf-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: cncf-demo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cncf-demo
    spec:
      containers:
      - name: main
        image: index.docker.io/vfarcic/cncf-demo:v0.0.3
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        env:
        - name: DB_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: cncf-demo-db
              key: endpoint
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: cncf-demo-db
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cncf-demo-db
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: cncf-demo-db
              key: password
        - name: DB_NAME
          value: cncf-demo-db
      - image: otel/autoinstrumentation-go
        name: instrumentation
        env:
        - name: OTEL_GO_AUTO_TARGET_EXE
          value: /usr/local/bin/cncf-demo
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://jaeger-collector.monitoring:4318
        - name: OTEL_SERVICE_NAME
          value: cncf-demo
        - name: OTEL_PROPAGATORS
          value: tracecontext,baggage
        securityContext:
          privileged: true
          runAsUser: 0
      shareProcessNamespace: true
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: cncf-demo-gateway
spec:
  selector:
    istio: ingress
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - '*'
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cncf-demo
  labels:
    app.kubernetes.io/name: cncf-demo
spec:
  ingressClassName: contour
  rules:
  - http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: cncf-demo
            port:
              number: 8080
    host: cncf-demo.34.203.2.152.nip.io
---
apiVersion: devopstoolkitseries.com/v1alpha1
kind: SQLClaim
metadata:
  name: cncf-demo
spec:
  id: cncf-demo-db
  compositionSelector:
    matchLabels:
      provider: aws
      db: postgresql
  parameters:
    version: "16.2"
    size: small
    databases:
    - cncf-demo-db
---
apiVersion: v1
kind: Secret
metadata:
  name: cncf-demo-db-password
data:
  password: T1QrOXZQcDhMdXhoeFVQWVpLSk1kUG1YM04xTzBTd3YzWG5ZVjI0UFZzcz0=
---
apiVersion: databases.schemahero.io/v1alpha4
kind: Database
metadata:
  name: cncf-demo
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  immediateDeploy: true
  connection:
    postgres:
      host:
        valueFrom:
          secretKeyRef:
            name: cncf-demo-db
            key: endpoint
      user:
        value: masteruser
      password:
        valueFrom:
          secretKeyRef:
            name: cncf-demo-db
            key: password
      port:
        value: "5432"
      dbname:
        value: cncf-demo-db
      sslmode:
        value: prefer
---
apiVersion: schemas.schemahero.io/v1alpha4
kind: Table
metadata:
  name: cncf-demo-videos
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  database: cncf-demo-db
  name: videos
  schema:
    postgres:
      primaryKey:
      - id
      columns:
      - name: id
        type: text
        constraints:
          notNull: true
      - name: title
        type: text
        constraints:
          notNull: true
---
apiVersion: v1
kind: Service
metadata:
  name: cncf-demo
  labels:
    app.kubernetes.io/name: cncf-demo
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: cncf-demo
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: cncf-demo-1
spec:
  gateways:
  - cncf-demo-gateway
  hosts:
  - cncf-demo.34.200.39.77.nip.io
  http:
  - name: primary
    route:
    - destination:
        host: cncf-demo-primary
        port:
          number: 8080
      weight: 100
    - destination:
        host: cncf-demo-canary
        port:
          number: 8080
      weight: 0
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: cncf-demo-2
spec:
  gateways:
  - cncf-demo-gateway
  hosts:
  - cncf-demo.34.200.39.77.nip.io
  http:
  - name: secondary
    route:
    - destination:
        host: cncf-demo-primary
        port:
          number: 8080
      weight: 100
    - destination:
        host: cncf-demo-canary
        port:
          number: 8080
      weight: 0
